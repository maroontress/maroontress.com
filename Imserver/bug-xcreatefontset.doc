フォント名が完全に指定された（名前に*が含まれない）場合。

XF86-3.3.3（R6.3ベース）でsegmentation faultが発生する。
原因はXlibのバグ（xc/lib/X11/omGeneric.c）だった。
堕ちなくてもメモリリークする場合もあった。
R6.4でも再現するのでバグレポートを提出。R6.5.1で修正された。

XF86-3.3.6（R6.3ベース）では堕ちなかった。
XF86-3.3.6のomGeneric.cでは該当する箇所を呼び出す、呼び出し元関数の処理が書き直されていた（このバグの問題とは別の理由だと思われる）。

その後、XF86-3.3.3とXF86-3.3.6では、XCreateFontset() -> XFreeFontset()でメモリリークすることが判明。
またXCreateFontset()の処理にかかる時間も余計にかかってしまう。
原因を調べると以前バグレポートで指摘した部分であった。
しかしXF86-3.3.6では、メモリリークと性能劣化の問題はそのままだった。

なぜわかったのか? ほとんどの場合、Xクライアントが指定するフォントセットには*が含まれるので、問題が表面化することは少ない。しかし、XIMサーバとXIMクライアントの通信を解析していると、XICのフォントセットアトリビュートをXIMサーバが受け取ったときに、フォントセット名が完全に展開されたものになっていたことに気付いた。
XIMクライアントは「XNFontSetとフォントセット」をXVaCreateNestedList()に与えて、XVaNestedList構造体へのポインタを得る。それをXSetICValues()の引数に指定して、表示に使用して欲しいフォントセットをXIMサーバに伝える。XIMサーバが受け取るのは、フォントセットの名前（文字列）であるが、この文字列はXIMクライアントがフォントセットを生成するときに指定した文字列とは異なる文字列になっている。
つまり、XIMクライアントがフォントセットを生成するとき、フォントセット名に*が含まれていたとしても、Xlibは内部的には「完全に展開された名前」で保持するように実装されている。この名前は、省略が補われているだけではなく、エイリアスも展開されている。
